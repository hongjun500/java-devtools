import org.springframework.util.StopWatch

plugins {
    id 'idea'
    id 'application'

    id "org.springframework.boot" version "3.0.0"
    // id "org.springframework.boot" version "3.1.5" apply false // 依赖但不应用

    id "io.spring.dependency-management" version "1.1.3"
}

version '1.0-SNAPSHOT'

springBoot {
    mainClass = 'com.hongjun.QuickStarterApplication'
}


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
    implementation 'org.mybatis.dynamic-sql:mybatis-dynamic-sql:1.4.1'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:4.2.0'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools:3.0.0'
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'

    testImplementation('org.springframework.boot:spring-boot-starter-test')

}

tasks.register('delete' + project.name.capitalize() + 'LogFiles', Delete) {
// tasks.register("delete${project.name.capitalize()}Logs", Delete) {
    description = '删除当前工程下的日志文件'
    group = 'custom tasks'

    // 日志文件的路径
    String logsSubDir = project.projectDir.absolutePath + "\\logs"

    doFirst {
        println "在子工程${project.name.capitalize()}中执行删除路径[${logsSubDir}]下的日志文件"
    }

    doLast {
        // 如果日志文件夹不存在，则不执行删除
        if (!file(logsSubDir).exists()) {
            println "日志文件夹[${logsSubDir}]不存在，不执行删除"
            return
        }
        // 记录删除日志文件的耗时
        StopWatch stopWatch = new StopWatch()
        stopWatch.start()
        // 删除日志文件
        fileTree(logsSubDir).include('**/*.log', '**/*html').each { File file ->
            println '删除文件: ' + file
            file.delete()
        }
        stopWatch.stop()
        println "删除日志文件耗时: ${stopWatch.getTotalTimeMillis()}ms"
    }
}

// todo 执行所有测试用例

