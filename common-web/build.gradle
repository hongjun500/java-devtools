plugins {
    id 'org.springframework.boot' version '3.0.0'

    id 'io.spring.dependency-management' version '1.1.3'
}
version '1.0-SNAPSHOT'


dependencies {
    // 自定义 starter
    annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'

    // akka 依赖做异步消息处理
    api 'com.typesafe.akka:akka-actor-typed_2.13:2.7.0'
    // redisson 做分布式锁
    api 'org.redisson:redisson-spring-boot-starter:3.23.0'
    api 'org.springframework.boot:spring-boot-starter-data-redis'

    // aop aspectj
    api 'org.springframework.boot:spring-boot-starter-aop'


    // web、websocket 相关(这里包含了 spring-boot-starter-web，所以不需要再引入)
    api 'org.springframework.boot:spring-boot-starter-websocket'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks {
    compileJava {
        // 解决 springboot 自定义元数据无法生成 spring-autoconfiguration-metadata.json 文件
        inputs.files(tasks.withType(ProcessResources))
    }
}

tasks.register('delete' + project.name.capitalize() + 'Logs', Delete) {
// tasks.register("delete${project.name.capitalize()}Logs", Delete) {
    description = '删除当前子工程下的日志文件'
    group = 'custom tasks'

    // 日志文件的路径
    def logsSubDir = project.projectDir.absolutePath + "\\logs"

    doFirst {
        println "在子工程${project.name.capitalize()}中执行删除日志文件，开始删除路径[${logsSubDir}]下的日志文件"
    }

    delete logsSubDir

    doLast {
        println "在子工程${project.name.capitalize()}中执行删除日志文件，删除日志文件完成"
    }
}