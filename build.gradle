plugins {
//    id 'java'
}

//全局配置
allprojects {
    group 'com.hongjun'
    version '1.0-SNAPSHOT'
    apply plugin: 'java-library'
    // jdk版本
//    sourceCompatibility = JavaVersion.VERSION_17
//    targetCompatibility = JavaVersion.VERSION_17

    // 在idea中使用gradle进行编译，编码gbk错误
    tasks.withType(JavaCompile) {
        compileJava {
            options.encoding("UTF-8")
        }
    }
    tasks.withType(Javadoc) {
        javadoc {
            options {
                options.encoding = "UTF-8"
            }
        }
    }

}


// 子模块的通用设置
subprojects {
    // 添加插件

//    apply plugin: 'java-library'

    // 设置仓库
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        mavenCentral()
    }
    // 设置通用的依赖
    dependencies {

        compileOnly 'org.projectlombok:lombok:1.18.22'
        // lombok的使用需要加上这个注解，否则编译失败
        annotationProcessor 'org.projectlombok:lombok:1.18.22'
        api 'com.google.guava:guava:31.1-jre'
        implementation 'com.github.ben-manes.caffeine:caffeine:3.1.1'
        implementation 'cn.hutool:hutool-all:5.8.8'
        // 测试时的使用
        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    }

    test {
        useJUnitPlatform()
    }
}


project(':common-starter') {
    // 定义Java版本
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    // 解决springboot自定义元数据无法生成spring-autoconfiguration-metadata.json文件无法生成
    tasks.withType(JavaCompile){
        inputs.files(tasks.withType(ProcessResources))
    }
     sourceSets {
         // 定义源码所在位置
         main {
             java {
                 srcDirs = ['src/main/java']
             }
             resources {
                 srcDirs = ['src/main/resources']
             }
         }
     }

    dependencies {
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.0.0'
        implementation ('org.springframework.boot:spring-boot-starter:3.0.0') {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
        implementation ('org.springframework.boot:spring-boot-starter-aop:3.0.0') {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'

        }
        implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.0.0'

    }
}


project(':common-web') {
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }


    dependencies {
        // 引用common-starter
        implementation project(':common-starter')
        implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.0.0'
        implementation ('org.springframework.boot:spring-boot-starter-web:3.0.0') {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'

        }

        testImplementation('org.springframework.boot:spring-boot-starter-test:3.0.0') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }
}



